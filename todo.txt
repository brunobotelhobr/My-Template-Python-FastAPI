LOGS,
Cache
test coverage
test init Db 
auth test

hash insegutro

rever settings e descriptions
autenticação via cookie
docstring modules

import toml  # type: ignore
logouy "{\"status\": \"Sucessfully logged out.\"}"

module and fuction docstrings
from api.settings.router import settings

modelf uses fields with descriptions
uSER: nEED PASSWORD RESET? > tiME TO CHANGE PASSWORD.

uSER sETTINGS:
    # default_needs_password_change: bool = Field(
    #     title="Default user needs password reset status",
    #     description="If enabled, users will be created with a password reset flag.",
    #     default=False,
    # )
login wiuth email or password: "login_with": "username",
user verification
need password reset?
filtros por propiedade?
ordenaçao de query?

    pylint.extensions.check_elif,
    pylint.extensions.bad_builtin,
    pylint.extensions.docparams,
    pylint.extensions.for_any_all,
    pylint.extensions.set_membership,
    pylint.extensions.code_style,
    pylint.extensions.overlapping_exceptions,
    pylint.extensions.typing,
    pylint.extensions.redefined_variable_type,
    pylint.extensions.comparison_placement,
    pylint.extensions.mccabe,


login with user or email?

initialize settings

block, validate, active user?
user and email awnays in lowercases

[00:37, 08/05/2023] Bruno Botelho: Puthon -i App.py (interativo)
[00:37, 08/05/2023] Bruno Botelho: Devugger va code



    PassLib is a great [[Python]] package to handle password hashes.
    It supports many secure hashing algorithms and utilities to work with them.
    The recommended algorithm is "[[Bcrypt]]".
    So, install PassLib with [[Bcrypt]]:

    pip install passlib[bycrypt]

    --> Tem OTP tbm.